# Generated by Django 5.2.6 on 2025-09-03 21:55

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("properties", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name="property",
            name="agent",
            field=models.ForeignKey(
                blank=True,
                help_text="Assigned agent (optional)",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="managed_properties",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="property",
            name="owner",
            field=models.ForeignKey(
                help_text="Property owner",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="owned_properties",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="propertyfeatureassignment",
            name="feature",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="property_assignments",
                to="properties.propertyfeature",
            ),
        ),
        migrations.AddField(
            model_name="propertyfeatureassignment",
            name="property",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="feature_assignments",
                to="properties.property",
            ),
        ),
        migrations.AddField(
            model_name="propertyimage",
            name="property",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="images",
                to="properties.property",
            ),
        ),
        migrations.AddField(
            model_name="property",
            name="status",
            field=models.ForeignKey(
                help_text="Current status of the property",
                on_delete=django.db.models.deletion.PROTECT,
                related_name="properties",
                to="properties.propertystatus",
            ),
        ),
        migrations.AddField(
            model_name="property",
            name="property_type",
            field=models.ForeignKey(
                help_text="Type of property",
                on_delete=django.db.models.deletion.PROTECT,
                related_name="properties",
                to="properties.propertytype",
            ),
        ),
        migrations.AddField(
            model_name="savedproperty",
            name="property",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="saved_by_users",
                to="properties.property",
            ),
        ),
        migrations.AddField(
            model_name="savedproperty",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="saved_properties",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddIndex(
            model_name="propertyfeatureassignment",
            index=models.Index(
                fields=["property"], name="property_fe_propert_9c697b_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="propertyfeatureassignment",
            index=models.Index(
                fields=["feature"], name="property_fe_feature_76186a_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="propertyfeatureassignment",
            unique_together={("property", "feature")},
        ),
        migrations.AddIndex(
            model_name="propertyimage",
            index=models.Index(
                fields=["property", "is_primary"], name="property_im_propert_0ad054_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="propertyimage",
            index=models.Index(fields=["order"], name="property_im_order_48eaf4_idx"),
        ),
        migrations.AddIndex(
            model_name="property",
            index=models.Index(
                fields=["city", "state"], name="properties_city_d76a1c_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="property",
            index=models.Index(
                fields=["property_type", "listing_type"],
                name="properties_propert_017b16_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="property",
            index=models.Index(
                fields=["sale_price"], name="properties_sale_pr_a207bf_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="property",
            index=models.Index(
                fields=["rent_price"], name="properties_rent_pr_dd0c36_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="property",
            index=models.Index(
                fields=["bedrooms", "bathrooms"], name="properties_bedroom_2aae3d_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="property",
            index=models.Index(
                fields=["is_published", "is_featured"],
                name="properties_is_publ_fc9899_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="property",
            index=models.Index(
                fields=["created_at"], name="properties_created_abda95_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="savedproperty",
            index=models.Index(
                fields=["user", "created_at"], name="saved_prope_user_id_a9f88d_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="savedproperty",
            unique_together={("user", "property")},
        ),
    ]
