# Generated by Django 5.2.6 on 2025-09-05 18:08

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ("properties", "0002_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name="property",
            name="deleted_at",
            field=models.DateTimeField(
                blank=True, help_text="When this record was deleted", null=True
            ),
        ),
        migrations.AddField(
            model_name="property",
            name="deleted_by",
            field=models.ForeignKey(
                blank=True,
                help_text="User who deleted this record",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="%(class)s_deleted_records",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="property",
            name="is_deleted",
            field=models.BooleanField(
                db_index=True,
                default=False,
                help_text="Whether this record has been soft deleted",
            ),
        ),
        migrations.AddField(
            model_name="property",
            name="retention_until",
            field=models.DateTimeField(
                blank=True,
                help_text="When this record will be permanently deleted",
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="property",
            name="search_metadata",
            field=models.JSONField(
                blank=True,
                default=dict,
                help_text="Additional search metadata and configuration",
            ),
        ),
        migrations.AddField(
            model_name="property",
            name="search_vector",
            field=models.TextField(
                blank=True, help_text="Computed search vector for full-text search"
            ),
        ),
        migrations.AddField(
            model_name="property",
            name="visibility_exceptions",
            field=models.JSONField(
                blank=True,
                default=dict,
                help_text="Complex visibility rules as JSON (e.g., {'tenant': 'LEASE.active'})",
            ),
        ),
        migrations.AddField(
            model_name="property",
            name="visibility_groups",
            field=models.TextField(
                blank=True,
                default="[]",
                help_text="JSON array of group names with access (e.g., ['landlords', 'agents'])",
            ),
        ),
        migrations.AddField(
            model_name="property",
            name="visibility_level",
            field=models.CharField(
                choices=[
                    ("PUBLIC", "Public"),
                    ("REGISTERED", "Registered Users"),
                    ("AGENCY_ONLY", "Agency Only"),
                    ("LANDLORD_ONLY", "Landlord Only"),
                    ("TENANT_ONLY", "Tenant Only"),
                    ("CLASSIFIED", "Classified"),
                    ("SYSTEM", "System Only"),
                ],
                db_index=True,
                default="REGISTERED",
                help_text="Visibility level for this record",
                max_length=20,
            ),
        ),
        migrations.AddField(
            model_name="property",
            name="visibility_users",
            field=models.TextField(
                blank=True,
                default="[]",
                help_text="JSON array of specific user IDs with access",
            ),
        ),
    ]
