# Generated by Django 5.2.6 on 2025-09-05 18:11

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
        ("users", "0001_initial"),
    ]

    operations = [
        migrations.AddField(
            model_name="user",
            name="deleted_at",
            field=models.DateTimeField(
                blank=True, help_text="When this record was deleted", null=True
            ),
        ),
        migrations.AddField(
            model_name="user",
            name="deleted_by",
            field=models.ForeignKey(
                blank=True,
                help_text="User who deleted this record",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="%(class)s_deleted_records",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="user",
            name="is_deleted",
            field=models.BooleanField(
                db_index=True,
                default=False,
                help_text="Whether this record has been soft deleted",
            ),
        ),
        migrations.AddField(
            model_name="user",
            name="notification_channels",
            field=models.TextField(
                blank=True,
                default='["in_app"]',
                help_text="JSON array of enabled notification channels",
            ),
        ),
        migrations.AddField(
            model_name="user",
            name="notifications_enabled",
            field=models.BooleanField(
                default=True,
                help_text="Whether notifications are enabled for this record",
            ),
        ),
        migrations.AddField(
            model_name="user",
            name="preferred_contact_method",
            field=models.CharField(
                choices=[
                    ("email", "Email"),
                    ("phone", "Phone"),
                    ("sms", "SMS"),
                    ("whatsapp", "WhatsApp"),
                    ("in_app", "In-App Notification"),
                ],
                default="email",
                help_text="Preferred method for receiving notifications",
                max_length=20,
            ),
        ),
        migrations.AddField(
            model_name="user",
            name="retention_until",
            field=models.DateTimeField(
                blank=True,
                help_text="When this record will be permanently deleted",
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="user",
            name="scheme_code",
            field=models.CharField(
                blank=True,
                help_text="Professional scheme or certification code",
                max_length=50,
            ),
        ),
        migrations.AddField(
            model_name="user",
            name="search_metadata",
            field=models.JSONField(
                blank=True,
                default=dict,
                help_text="Additional search metadata and configuration",
            ),
        ),
        migrations.AddField(
            model_name="user",
            name="search_vector",
            field=models.TextField(
                blank=True, help_text="Computed search vector for full-text search"
            ),
        ),
        migrations.AddField(
            model_name="user",
            name="secondary_contact_method",
            field=models.CharField(
                blank=True,
                choices=[
                    ("email", "Email"),
                    ("phone", "Phone"),
                    ("sms", "SMS"),
                    ("whatsapp", "WhatsApp"),
                    ("in_app", "In-App Notification"),
                ],
                help_text="Secondary contact method",
                max_length=20,
            ),
        ),
        migrations.AddField(
            model_name="user",
            name="visibility_exceptions",
            field=models.JSONField(
                blank=True,
                default=dict,
                help_text="Complex visibility rules as JSON (e.g., {'tenant': 'LEASE.active'})",
            ),
        ),
        migrations.AddField(
            model_name="user",
            name="visibility_groups",
            field=models.TextField(
                blank=True,
                default="[]",
                help_text="JSON array of group names with access (e.g., ['landlords', 'agents'])",
            ),
        ),
        migrations.AddField(
            model_name="user",
            name="visibility_level",
            field=models.CharField(
                choices=[
                    ("PUBLIC", "Public"),
                    ("REGISTERED", "Registered Users"),
                    ("AGENCY_ONLY", "Agency Only"),
                    ("LANDLORD_ONLY", "Landlord Only"),
                    ("TENANT_ONLY", "Tenant Only"),
                    ("CLASSIFIED", "Classified"),
                    ("SYSTEM", "System Only"),
                ],
                db_index=True,
                default="REGISTERED",
                help_text="Visibility level for this record",
                max_length=20,
            ),
        ),
        migrations.AddField(
            model_name="user",
            name="visibility_users",
            field=models.TextField(
                blank=True,
                default="[]",
                help_text="JSON array of specific user IDs with access",
            ),
        ),
        migrations.AddField(
            model_name="user",
            name="whatsapp_number",
            field=models.CharField(
                blank=True,
                help_text="WhatsApp number for notifications",
                max_length=17,
                validators=[
                    django.core.validators.RegexValidator(
                        message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.",
                        regex="^\\+?1?\\d{9,15}$",
                    )
                ],
            ),
        ),
        migrations.AddField(
            model_name="user",
            name="work_class",
            field=models.CharField(
                blank=True,
                choices=[
                    ("full_time", "Full Time"),
                    ("part_time", "Part Time"),
                    ("contract", "Contract"),
                    ("freelance", "Freelance"),
                    ("consultant", "Consultant"),
                ],
                help_text="Work classification for professional users",
                max_length=20,
            ),
        ),
        migrations.AlterField(
            model_name="user",
            name="role",
            field=models.CharField(
                choices=[
                    ("buyer", "Buyer"),
                    ("seller", "Seller"),
                    ("agent", "Agent"),
                    ("admin", "Admin"),
                    ("landlord", "Landlord"),
                    ("tenant", "Tenant"),
                    ("contractor", "Contractor"),
                    ("property_manager", "Property Manager"),
                ],
                default="buyer",
                help_text="User role in the system",
                max_length=20,
            ),
        ),
        migrations.AddIndex(
            model_name="user",
            index=models.Index(fields=["scheme_code"], name="users_scheme__509130_idx"),
        ),
        migrations.AddIndex(
            model_name="user",
            index=models.Index(fields=["work_class"], name="users_work_cl_9bb7d8_idx"),
        ),
        migrations.AddIndex(
            model_name="user",
            index=models.Index(
                fields=["preferred_contact_method"], name="users_preferr_6747a4_idx"
            ),
        ),
    ]
