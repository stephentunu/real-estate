# Generated by Django 5.2.6 on 2025-09-03 21:55

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                ("email", models.EmailField(max_length=254, unique=True)),
                (
                    "phone_number",
                    models.CharField(
                        blank=True,
                        help_text="Phone number in international format",
                        max_length=17,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.",
                                regex="^\\+?1?\\d{9,15}$",
                            )
                        ],
                    ),
                ),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("buyer", "Buyer"),
                            ("seller", "Seller"),
                            ("agent", "Agent"),
                            ("admin", "Admin"),
                        ],
                        default="buyer",
                        help_text="User role in the system",
                        max_length=10,
                    ),
                ),
                (
                    "avatar",
                    models.ImageField(
                        blank=True,
                        help_text="User profile picture",
                        null=True,
                        upload_to="avatars/",
                    ),
                ),
                (
                    "bio",
                    models.TextField(
                        blank=True,
                        help_text="Brief description about the user",
                        max_length=500,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "email_verified",
                    models.BooleanField(
                        default=False,
                        help_text="Whether the user's email has been verified",
                    ),
                ),
                (
                    "email_verified_at",
                    models.DateTimeField(
                        blank=True, help_text="When the email was verified", null=True
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True, help_text="Whether the user account is active"
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "User",
                "verbose_name_plural": "Users",
                "db_table": "users",
                "ordering": ["-created_at"],
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="UserProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "address_line_1",
                    models.CharField(
                        blank=True, help_text="Primary address line", max_length=255
                    ),
                ),
                (
                    "address_line_2",
                    models.CharField(
                        blank=True,
                        help_text="Secondary address line (apartment, suite, etc.)",
                        max_length=255,
                    ),
                ),
                (
                    "city",
                    models.CharField(blank=True, help_text="City name", max_length=100),
                ),
                (
                    "state",
                    models.CharField(
                        blank=True, help_text="State or province", max_length=100
                    ),
                ),
                (
                    "postal_code",
                    models.CharField(
                        blank=True, help_text="Postal or ZIP code", max_length=20
                    ),
                ),
                (
                    "country",
                    models.CharField(
                        blank=True,
                        default="Kenya",
                        help_text="Country name",
                        max_length=100,
                    ),
                ),
                (
                    "company_name",
                    models.CharField(
                        blank=True, help_text="Company or agency name", max_length=200
                    ),
                ),
                (
                    "license_number",
                    models.CharField(
                        blank=True,
                        help_text="Professional license number",
                        max_length=100,
                    ),
                ),
                (
                    "years_experience",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="Years of experience in real estate",
                        null=True,
                    ),
                ),
                (
                    "website",
                    models.URLField(
                        blank=True, help_text="Personal or company website"
                    ),
                ),
                (
                    "linkedin_url",
                    models.URLField(blank=True, help_text="LinkedIn profile URL"),
                ),
                (
                    "twitter_url",
                    models.URLField(blank=True, help_text="Twitter profile URL"),
                ),
                (
                    "preferred_language",
                    models.CharField(
                        default="en",
                        help_text="Preferred language code (e.g., 'en', 'sw')",
                        max_length=10,
                    ),
                ),
                (
                    "timezone",
                    models.CharField(
                        default="Africa/Nairobi",
                        help_text="User's timezone",
                        max_length=50,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="profile",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "User Profile",
                "verbose_name_plural": "User Profiles",
                "db_table": "user_profiles",
            },
        ),
        migrations.AddIndex(
            model_name="user",
            index=models.Index(fields=["email"], name="users_email_4b85f2_idx"),
        ),
        migrations.AddIndex(
            model_name="user",
            index=models.Index(fields=["role"], name="users_role_0ace22_idx"),
        ),
        migrations.AddIndex(
            model_name="user",
            index=models.Index(fields=["created_at"], name="users_created_6541e9_idx"),
        ),
        migrations.AddIndex(
            model_name="userprofile",
            index=models.Index(
                fields=["city", "state"], name="user_profil_city_c8a47f_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="userprofile",
            index=models.Index(
                fields=["company_name"], name="user_profil_company_acf859_idx"
            ),
        ),
    ]
